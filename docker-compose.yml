#docker-compose版本
version: "3.4"
#服務，每個功能或容器就是一個服務。
services:
  
  #########
  #銀行服務#
  #########
  #服務名稱，如果我們要登入容器是要輸入服務名稱的，隨意取名即可
  bank-server:
    #這個是我們的映像檔名稱，可以自己選擇，當映像檔建立時就會是bank-server版本0.0
    image: bank-server:0.0
    #用在這個資料夾下的Dockerfile建立映像檔
    build: ./dockerfiles/bank-server/
    #要啟動這個，才能在關閉終端後仍然繼續運作容器
    tty: true
    #與容器外的資料夾共通的部分
    volumes:
      - ./apps/BankServer:/app
    # 開啟 8080 port 對外
    ports:
      - "8080:8080"
    # 啟動後指令
    command: "flask run --port 8080  --host=0.0.0.0"
    #網路IP設置
    networks:
      vpcbr:
        ipv4_address: 10.5.0.2

  #########
  #商店服務#
  #########
  #服務名稱，如果我們要登入容器是要輸入服務名稱的，隨意取名即可
  store-server:
    #這個是我們的映像檔名稱，可以自己選擇，當映像檔建立時就會是 store-server版本0.0
    image: store-server:0.0
    #用在這個資料夾下的Dockerfile建立映像檔
    build: ./dockerfiles/store-server/
    #要啟動這個，才能在關閉終端後仍然繼續運作容器
    tty: true
    #與容器外的資料夾共通的部分
    volumes:
      - ./apps/StoreServer:/app
    # 開啟 8081 port 對外
    ports:
      - "8081:8081"
    # 啟動後指令
    command: "flask run --port 8081  --host=0.0.0.0"
    #網路IP設置
    networks:
      vpcbr:
        ipv4_address: 10.5.0.3

  #########
  #API文檔服務#
  #########
  #服務名稱，如果我們要登入容器是要輸入服務名稱的，隨意取名即可
  swagger-server:
    #這個是我們的映像檔名稱，可以自己選擇，當映像檔建立時就會是 store-server版本0.0
    image: swaggerapi/swagger-ui
    #環境變數
    environment:
      -  SWAGGER_JSON=/app/swagger.yaml
    #要啟動這個，才能在關閉終端後仍然繼續運作容器
    tty: true
    #與容器外的資料夾共通的部分
    volumes:
      - ./apps/Swagger:/app
    # 開啟 8081 port 對外
    ports:
      - "8082:8080"
    # 啟動後指令
    # command: "flask run --port 8081  --host=0.0.0.0"
    #網路IP設置
    networks:
      vpcbr:
        ipv4_address: 10.5.0.4

  ###############
  #可疑輸入偵測器#
  ###############
  #服務名稱，如果我們要登入容器是要輸入服務名稱的，隨意取名即可
  detector:
    #這個是我們的映像檔名稱，可以自己選擇，當映像檔建立時就會是 store-server版本0.0
    image: detector:0.0
    #用在這個資料夾下的Dockerfile建立映像檔
    build: ./dockerfiles/detector/
    #要啟動這個，才能在關閉終端後仍然繼續運作容器
    tty: true
    #與容器外的資料夾共通的部分
    volumes:
      - ./apps/Detector:/app
    # 開啟 8081 port 對外
    ports:
      - "8083:8083"
    # 啟動後指令
    command: "bash"
    #網路IP設置
    networks:
      vpcbr:
        ipv4_address: 10.5.0.5

  #########
  #程式文檔服務#
  #########
  #服務名稱，如果我們要登入容器是要輸入服務名稱的，隨意取名即可
  mkdocs-server:
    container_name: mkdocs
    image: polinux/mkdocs:1.2.3
    ports:
      - "8084:8000"
    environment:
      LIVE_RELOAD_SUPPORT: 'true'
      ADD_MODULES: 'fontawesome-markdown mkdocs-git-revision-date-localized-plugin mkdocs-material'
      FAST_MODE: 'true'
      DOCS_DIRECTORY: '/app'
      UPDATE_INTERVAL: 15
      AUTO_UPDATE: 'true'
    volumes:
      - ./apps/MKDocs:/app/

networks:
  #網路名稱為vpcbr，該名稱可以變更。
  vpcbr:
    driver: bridge
    ipam:
     config:
       - subnet: 10.5.0.0/16
         gateway: 10.5.0.1